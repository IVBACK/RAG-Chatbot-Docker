# --- Ollama Configuration ---
# Choose the appropriate image tag for your hardware:
# 'rocm'   -> For AMD GPUs using ROCm (default here)
# 'latest' -> For CPU or NVIDIA CUDA GPUs
OLLAMA_IMAGE_TAG=rocm

# AMD Specific GFX Version Override (Only for AMD GPUs)
# Set if necessary according to your GPU architecture.
# Example for RX 7900 XT (gfx1100): HSA_OVERRIDE_GFX_VERSION=11.0.0
# Example for RX 6800 (gfx1030): HSA_OVERRIDE_GFX_VERSION=10.3.0
HSA_OVERRIDE_GFX_VERSION=11.0.0

# --- Database Configuration ---
# Hostname of the PostgreSQL database container
DB_HOST=rag-db
# Name of the PostgreSQL database
DB_NAME=rag
# Username for the database
DB_USER=rag_user
# Password for the database
DB_PASSWORD=rag_password

# --- Data Directory ---
# Path to the directory where input documents are stored inside the container
DATA_DIR=/app/data

# --- Flask Application Configuration ---
# Flask environment mode ('production' or 'development')
FLASK_ENV=production

# --- NLP and Model Settings ---
# Language for stopword removal (used during text processing)
STOPWORDS_LNG=english

# Name of the model used for generating text embeddings
EMBEDDING_MODEL=all-mpnet-base-v2

# Model used for classification tasks (zero-shot classification)
CLASSIFIER_MODEL=facebook/bart-large-mnli

# Large Language Model (LLM) served via Ollama
OLLAMA_MODEL=llama3.1:8b

# --- Ollama Service Configuration ---
# Path where Ollama models are stored (on the host)
OLLAMA_PATH=/usr/share/ollama/.ollama

# Base URL of the Ollama service (inside Docker network)
OLLAMA_HOST=http://ollama:11434

# --- CORS Configuration ---
# Allowed origins for cross-origin requests (CORS)
CORS_ORIGINS=http://sitetest.local

# Flask Secret Key: Used for session signing and other security features.
# MUST be a long, random, and secret string in production.
SECRET_KEY=your_very_strong_random_key_here
